{
    "name": "enpii/enpii-base",
    "type": "wordpress-muplugin",
    "require": {
        "php": "^7.2.5|^8.0",
        "laravel/framework": "7.30.6",
        "mcaskill/composer-exclude-files": "^3.0.0",
        "symfony/translation-contracts": "~2.5.2",
        "symfony/translation": "~5.4.14",
        "symfony/string": "~5.4.15",
        "symfony/event-dispatcher-contracts": "~2.5.2",
        "symfony/event-dispatcher": "~5.4.9",
        "symfony/deprecation-contracts": "~2.5.2",
        "symfony/css-selector": "~5.4.11"
    },
    "require-dev": {
        "10up/wp_mock": "dev-trunk",
        "automattic/vipwpcs": "^2.3",
        "codeception/codeception": "^4.2",
        "codeception/module-asserts": "2.0.1",
        "codeception/module-phpbrowser": "^1.0.0",
        "dealerdirect/phpcodesniffer-composer-installer": "^0.7.2",
        "johnpbloch/wordpress-core": "^6.0",
        "phpcompatibility/php-compatibility": "*",
        "psr/log": "~1.1.4",
        "ramsey/uuid": "~4.2.3",
        "wpackagist-plugin/woocommerce": "^6.0",
        "wpackagist-theme/storefront": "^4.0",
        "wpackagist-theme/twentytwentythree": "^1.0.0"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "repositories": [
        {
            "type": "composer",
            "url": "https://wpackagist.org",
            "only": [
                "wpackagist-plugin/*",
                "wpackagist-theme/*"
            ]
        }
    ],
    "autoload": {
        "files": [
            "./src/Foundation/Support/helpers-wp-app.php",
            "./src/Foundation/Support/helpers-wp-app-overrides.php",
            "./src/Foundation/Support/helpers.php",
            "./src/Dependencies/Illuminate/Support/helpers.php"
        ],
        "psr-4": {
            "Enpii\\WP_Plugin\\Enpii_Base\\": "src"
        }
    },
    "autoload-dev": {
      "files": [
          "./src/Dependencies/Symfony/Component/VarDumper/Resources/functions/dump.php"
      ],
      "psr-4": {
          "Enpii\\WP_Plugin\\Enpii_Base\\Tests\\": "tests",
          "Enpii\\WP_Plugin\\Enpii_Base\\Tests\\Unit\\": "tests/unit"
      }
  },
    "config": {
        "allow-plugins": {
            "composer/installers": true,
            "johnpbloch/wordpress-core-installer": true,
            "mcaskill/composer-exclude-files": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        },
        "vendor-dir": "./vendor",
        "sort-packages": true
    },
    "extra": {
        "exclude-from-files": [
            "laravel/framework/src/Illuminate/Foundation/helpers.php",
            "laravel/framework/src/Illuminate/Support/helpers.php"
        ],
        "installer-paths": {
            "dev-docker/wordpress/wp-content/themes/{$name}/": [
                "type:wordpress-theme"
            ],
            "dev-docker/wordpress/wp-content/plugins/{$name}/": [
                "type:wordpress-plugin"
            ]
        },
        "mozart": {
            "dep_namespace": "Enpii\\WP_Plugin\\Enpii_Base\\Dependencies\\",
            "dep_directory": "/src/Dependencies/",
            "classmap_directory": "/classes/dependencies/",
            "classmap_prefix": "NpWpNPB_",
            "packages": [
                "laravel/framework"
            ],
            "excluded_packages": [],
            "override_autoload": [],
            "delete_vendor_directories": true
        }
    },
    "scripts": {
        "post-install-cmd": [
            "[ $COMPOSER_DEV_MODE -eq 0 ] || cp -r `find ./vendor/johnpbloch/wordpress-core -maxdepth 1 -mindepth 1 | cut -c3- | grep -v 'wp-content'` dev-docker/wordpress"
        ],
        "post-update-cmd": [
            "[ $COMPOSER_DEV_MODE -eq 0 ] || cp -r `find ./vendor/johnpbloch/wordpress-core -maxdepth 1 -mindepth 1 | cut -c3- | grep -v 'wp-content'` dev-docker/wordpress"
        ],
        "dev-update": [
            "@composer update --dev",
            "cp -r `find ./vendor/johnpbloch/wordpress-core -maxdepth 1 -mindepth 1 | cut -c3- | grep -v 'wp-content'` dev-docker/wordpress"
        ],
        "phpcs": [
            "./vendor/bin/phpcs"
        ],
        "phpunit": [
            "./vendor/bin/phpunit"
        ],
        "codecept": [
            "./vendor/bin/codecept run"
        ],
        "test": [
            "@phpcs",
            "@phpunit"
        ]
    }
}
